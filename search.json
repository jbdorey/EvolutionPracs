[{"path":"https://jbdorey.github.io/EvolutionPracs/articles/MEGA_tutorial.html","id":"intro-to-mega","dir":"Articles","previous_headings":"","what":"Intro to MEGA","title":"Evolution Prac MEGA supplement — Using MEGA to align sequences and build trees","text":"know ’ve never actually used MEGA ? Ha! , welcome tutorial teach learn! sure know ot inspire confidence. , used similar, paid program called Geneious quite extensively. MEGA, downloadable , powerful free software can really variety things. around long time still maintained updated, amazing!","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/MEGA_tutorial.html","id":"downloading-mega","dir":"Articles","previous_headings":"Intro to MEGA","what":"Downloading MEGA","title":"Evolution Prac MEGA supplement — Using MEGA to align sequences and build trees","text":"MEGA home page can download program. Note, drop-downs help choose operating system, version (GUI command-line [code]), version want. , automatically populate correctly . Go ahead click green “DOWNLOAD” button.  need scroll “Accept” user agreement. , need fill short survey (similar ). Note: MEGA free research education. , make sure tick least one :) , able use download client install computer.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/MEGA_tutorial.html","id":"running-mega","dir":"Articles","previous_headings":"Intro to MEGA","what":"Running MEGA","title":"Evolution Prac MEGA supplement — Using MEGA to align sequences and build trees","text":"first open MEGA, likely get asked questions … Feel free answer, . ’s , generally speaking, someone makes resources freely available, ’m quite inclined help answer!  Take moment look MEGA options provides. also provides help first-time users tutorials () might find useful!  includes tutorials aligning sequences whatever else want — hey, pretty cool program!","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/MEGA_tutorial.html","id":"open-your-data","dir":"Articles","previous_headings":"Intro to MEGA","what":"Open your data","title":"Evolution Prac MEGA supplement — Using MEGA to align sequences and build trees","text":"First thing’s first, let’s open alignment MEGA. can click “DATA” navigate alignment want use. use equalisedFasta.fasta file, can download using code R (pasting link browser copying text). asked ’d like Align Analyze data import. Choose Align.    alignment opens look pretty similar one helped make practical 3! can see species/sequence names column left-hand side can see sequence base pairs coloured right-hand side. Side note: also “Translate” sequence amino acids (proteins) click “Translated Protein Sequence” button. prompt us genetic code “Standard” (.e., nuclear data). , click “Cancel” select “Vertebrate Mitochondrial” gene found mitochondria vertebrates!","code":"utils::download.file(url = \"https://raw.githubusercontent.com/jbdorey/EvolutionPracs/main/vignettes/equalisedFasta.fasta\",                      destfile = \"equalisedFasta.fasta\",                      method=\"curl\")"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/MEGA_tutorial.html","id":"align-your-data","dir":"Articles","previous_headings":"Intro to MEGA","what":"Align your data","title":"Evolution Prac MEGA supplement — Using MEGA to align sequences and build trees","text":"Okay, now sequences , let’s align . MEGA offers two common alignment protocols, ClustalW MUSCLE. don’t need go details either (frankly don’t know better, tend play around manually align needed). , let’s just use ClustalW. top bar, select Alignment > ClustalW. open dialog help chose alignment parameters, keep defaults select “OK” allow MEGA run alignment. may look like alignment worked (see third screenshot ), however, scroll right find one sequence just much longer others (just R example prac 3)!    One strength GUI interface like MEGA Geneious can add remove basepairs spaces help improve alignment. may sound like cheating data, sometimes alignment algorithms poor job. Also, sometimes get science might find , actually, decisions straight-arbitrary! comforting thought, always try best scientist can regardless! Anywho. point, export alignment .fasta file load back R, like (). , continue making tree MEGA","code":""},{"path":[]},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/MEGA_tutorial.html","id":"build-your-tree","dir":"Articles","previous_headings":"Tree-building in MEGA","what":"Build your tree","title":"Evolution Prac MEGA supplement — Using MEGA to align sequences and build trees","text":"order build tree MEGA, need send new alignment back main session clicking little save icon top bar.   can go back main session open .mas file just saved using “DATA” button, , time select “Analyze”. data appear main window can click “PHYLOGENY” button make tree data just imported! use simple neighbour-joining tree example (select “Ok” use currently active data). point make decisions build tree. : Change “Test Phylogeny” “Bootstrap method” 500 replicates — sub-sample data 500 times, re-make tree 500 times, see many times topology remains constant! Change “Substitutions Type” simple “Jukes-Cantor model”. Otherwise, leave defaults click “Ok”. Note: “Select Codon Positions” option may present chosen protein translation.   open new window two tabs; “Original tree” “Bootstrap Consensus Tree”. want select latter, show tree, bootstrap support percentage often node remained sub-sampled. also note MEGA kindly reported tree made, critical report paper… assignment!  Take moment play settings top bar, left-hand bar, even clicking tree nodes (right-clicking) see options!","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/MEGA_tutorial.html","id":"save-your-tree","dir":"Articles","previous_headings":"Tree-building in MEGA","what":"Save your tree","title":"Evolution Prac MEGA supplement — Using MEGA to align sequences and build trees","text":"Now ’s time save tree conduct analysis back R! Select File > “Export Current Tree (Newick)” save tree ’d like saved, including Bootstrap values! MEGA open new window text string (newick format tree). can go ahead use save icon chose want file saved (even straight-copy paste text file probably even R).","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/MEGA_tutorial.html","id":"read-your-tree-back-into-r","dir":"Articles","previous_headings":"","what":"Read your tree back into R","title":"Evolution Prac MEGA supplement — Using MEGA to align sequences and build trees","text":"’s time re-join world coding! , need read newick tree back R “phylo” format use phytools package. easily achieved using function phytools::read.newick()!  just catch practical 4! Assignment note: Make certain information need report assignment.","code":"# read in the newick tree from the file  tree <- phytools::read.newick(file = \"MEGA_tree.nwk\")   # Read in the neqick tree from text!  tree <- phytools::read.newick(text = \"(((((((Asemospiza_obscura_HQ153059,Geospiza_fortis_21616577)0.8160,Geospiza_difficilis_696154205)0.5400,(Certhidea_fusca_696154149,Certhidea_olivacea_696154217)0.5640)0.9300,Geospiza_septentrionalis_696154211)0.8000,Geospiza_magnirostris_696154197,Geospiza_conirostris_696154153,Geospiza_fuliginosa_696154219)0.5380,Geospiza_scandens_696154203)0.9700,Camarhynchus_heliobates_696154169,Camarhynchus_psittacula_696154121,Camarhynchus_pallidus_696154183Camarhynchus_parvulus_696154177,Camarhynchus_pauper_696154127);\")    # Plot the tree using phytools phytools::plotTree(tree, ftype = \"i\", fsize = 0.5, lwd = 1)   # Add in the nodes phytools::labelnodes(text = tree$node.label %>% as.numeric() %>% round(2),                      node = tree$edge[,1],                      interactive = FALSE,                      shape = \"circle\",                      cex = 0.7)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"introduction-to-the-practical-schedule","dir":"Articles","previous_headings":"","what":"Introduction to the practical schedule","title":"Evolution Prac 1 — Getting ready!","text":"Practicals run practical schedule course handbook. Following practical, : Four weeks Phylogenetics Module. first three weeks focused teaching phylogenetics R programming language fourth aimed providing support Grant Proposal assignment. four weeks Conservation Behaviour Module. module focus teaching human-wildlife conflicts supporting Elevator Pitch assignment. weeks 7 13, instead prac, -class quizzes, worth 20% final grade base lectures delivered previously. weeks 11 12, deliver seminars class, instead undertaking standard practical.  Attention: completed questions shown demonstrator Lecturer answers outputs, may leave. , feel free hang around, play, help classmates.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"working-together","dir":"Articles","previous_headings":"","what":"Working together","title":"Evolution Prac 1 — Getting ready!","text":"won’t forming groups per se, possible work together benches provide neighbours help code like. encourage neighbour may already overcome errors come across student helping one receiving help benefit! course, help well; demonstrators answers , , lecturers .","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"start-thinking-about-a-macroevolutionary-question","dir":"Articles","previous_headings":"","what":"Start thinking about a macroevolutionary question","title":"Evolution Prac 1 — Getting ready!","text":"“Macroevolutionary questions” may sound like arcane concept. However, really just questions ask goal uncovering broad scale (almost always across multiple species) evolutionary patterns. Maybe doesn’t help… , simple question like “wonder many bird species purple feathers” easily addressed macroevolutionary question! , might broad question… work bees, might question particular bee subgenus. Say halictid (family Halictidae) bee subgenus Lasioglossum (Homalictus). might come hypothesis “bees subgenus Homalictus metalic colouration non-metalic”. ’s simple enough question suspect ’s true… bees found place (Australia Southern China India)! Maybe narrow place fewer species lots genetic data available. happen work Fijian Homalictus, hypothesise “FIJIAN bees subgenus Homalictus metallic abdomens non-metallic abdomens” — question prevalence state. data answer question derived . also hypothesise “Homalictus bees likely move metallic abdomens non-metallic abdomens way around” — question frequently states evolve direction. get idea. Now talking terms macroevolution. might question want answer, might group interested . , need choose taxon big enough (say >7 species) limit subset species (<30) genetic data trait data either exist can easily harvested. start searching Google Scholar, Scopus, something like “macroevolution bears”. can see genetic data available morphological data available. can use data assignment, must ask novel question using data subset data. Talk among table desk mate demonstrators. don’t need project set stone means, ’s good get started thinking might able !","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"getting-ready-with-r-and-rstudio","dir":"Articles","previous_headings":"","what":"Getting ready with R and RStudio","title":"Evolution Prac 1 — Getting ready!","text":"computers already R RStudio installed. , using personal computer, feel free follow steps prepare week 2 practicals, dive pretty quickly. moment spare time may consider skimming text, especially “Script preparation” “’s coming next week” sections.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"install-r","dir":"Articles","previous_headings":"4 Getting ready with R and RStudio","what":"Install R","title":"Evolution Prac 1 — Getting ready!","text":"R installed computer already, go ahead now. Please visit CSIRO mirror CRAN download relevant version R operating system. , follow instructions install computer.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"install-rstudio","dir":"Articles","previous_headings":"4 Getting ready with R and RStudio","what":"Install RStudio","title":"Evolution Prac 1 — Getting ready!","text":"R command-land programming language R, horribly ugly don’t like idea working directly. reason, users use R within much nicer interface program, called RStudio. Download free version RSTudio. Now, programs installed, can simply open RStudio get coding! going much R today, don’t worry, ’d like get little acquainted least start installing packages R ready following weeks.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"running-r-in-rstudio","dir":"Articles","previous_headings":"4 Getting ready with R and RStudio","what":"Running R in RStudio","title":"Evolution Prac 1 — Getting ready!","text":"get working RStudio, let’s make folder save practical outputs related files. Mine called “BIOL365_pracs_2025”. Notice used underscores instead spaces? good practice spaces folder paths want coding stuff. time ’s fine… , pro tip, sometimes, cause problems might hard track ! open RStudio first time, look little something like (Fig. 2). , without funky colour scheme. top left-hand side drop , white page green plus sign . Click can select add new “R Script” (Fig. 3). can go ahead save blank script folder pracs (Fig. 4). called script “MyFirstRScript.R”. ’s also good practice leave info made script, , can get touch ! Go ahead copy script personalise details! notice hashtags? comments R ignore (Fig. 5)!","code":"# BIOL365 at the University of Wollongong, very basic R stuff # Getting ready to do stuff with R # Written by FirstName LastName YEAR-MONTH-DAY University of Wollongong; your@email.here"},{"path":[]},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"working-directory-primer","dir":"Articles","previous_headings":"4 Getting ready with R and RStudio > 4.4 Script preparation","what":"Working directory primer","title":"Evolution Prac 1 — Getting ready!","text":"know many struggle concept working directories think important enough, pointed — thank :), describe detail. Just like content cover Conservation Biology (e.g., think macroecology), name sounds much scarier reality accepting hopefully help master concepts. (Upon reflection, may poor example many.) Similarly working directories actually quite simple! One way look working directory think breadcrumb trail root directory computer’s files stored directly working file (working directory) contains R project, code, files, etc. imagine root directory closet (e.g., / Mac/Linux C:\\ Windows). Within closet may shelves, hangers, shoe racks, , don’t look skeletons, laundry basket, etc. things might use keep closet nice, tidy, organised — folders. Within drawers may also compartments also consider folders , way, closet hierarchical system containing smaller smaller storage units (folders). units may contain units (folders), may also contain items like shirts, jewelry, shoes… take figure example item “Shirt” clothing; tells us use item. way, file extensions (e.g., file.extension) tells computer file open ! likely used things like images (.jpg, .tiff, .png), text files (.docx, .txt, .r), data files (.csv, .xlsx, .rda). Hence, might say Shirt.cloth! items files, just like .r file holds text code! essentially computer looks like! cloud storage like OneDrive GoogleDrive? Well, imagine keep stuff Elon Musk’s closet say “Let keep stuff closet use whenever want, closet just matchbox”. trust stuff Elon hope doesn’t cut , lose , sell someone else. probably fine, often rely internet access able use stuff closet. time start R project, make decision store closet. Maybe store somewhere hidden, maybe ’s first thing open door (near root directory). Every time want access project, associated items (files), might decide need search closet find everything (trust , finding anything closet used two years ago easy!!). choose directory Files tab RStudio. ’s headache. Alternatively, imagine next wanted find everything associated project just find .r code file top magical string attached working directory every item needed needed project. . Attention:  Windows gives file paths different way everyone else. :( Windows:  Windows, find file paths, right click file folder select “Properties”. , can copy file “Location”. , need change backslashes (\\) forward slashes (/). example: Becomes… MacOS:  Mac Linux, much easier. Using Mac, can right-click file hold “option” key Copy \"file/folder\" Pathname. Simply paste R get something like automatically:","code":"\"D:\\Users\\jamesdorey\\...\" \"D:/Users/jamesdorey/...\" '/Users/jamesdorey/...'"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"setting-the-working-directory","dir":"Articles","previous_headings":"4 Getting ready with R and RStudio > 4.4 Script preparation","what":"Setting the working directory","title":"Evolution Prac 1 — Getting ready!","text":"Let us begin telling R working directory (folder made ) actually . “BIOL365_pracs_2025” folder found end path: “/Users/jamesdorey/Desktop/Uni/Teaching/BIOL365_971/BIOL365_pracs_2025/Prac1/” (see , spaces!). , can run : Congratulations, set working directory! R can still access files outside folder, look default set (must set time open R). quick pro-tip: can run code, ’s entered script mouse click , , line want run pressing “Run” button top right hand side script window. ’s right pain. mac can simply use “command+enter” PC can use “control+enter” run code. ’ll make life easier quicker. Q1: working directory? running Windows Mac need change path make work?","code":"# Set the RootPath to your folder RootPath <- \"/Users/jamesdorey/Desktop/Uni/Teaching/BIOL365_971/BIOL365_pracs_2025/Prac1/BIOL365_pracs_2025\"   # You can then set this as the project's working directory.    # This is where R will first look to find    # or save data as a default setwd(RootPath)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"install-packages","dir":"Articles","previous_headings":"4 Getting ready with R and RStudio > 4.4 Script preparation","what":"Install packages","title":"Evolution Prac 1 — Getting ready!","text":"Let us also quickly install packages ’ll need start next week (mostly need per package per version R). may seen one package installed ran code. ’s normal, many packages depend packages work.","code":"#  This package is for data management and table manipulation install.packages(\"dplyr\") # This package lets us use tidy pipes; %>% install.packages(\"magrittr\")"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"load-packages","dir":"Articles","previous_headings":"4 Getting ready with R and RStudio > 4.4 Script preparation","what":"Load packages","title":"Evolution Prac 1 — Getting ready!","text":"last R thing get today load packages R (also done every time open R, relevant packages). need may always want EVERY package ever downloaded accessible R… can cause issues. way, can selective ones active.","code":"library(dplyr) library(magrittr)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"read-in-data","dir":"Articles","previous_headings":"","what":"Read in data","title":"Evolution Prac 1 — Getting ready!","text":"’m going borrow part another course teach , BIOL361 might familiar . , getting little familiar data R week mental load little lower help! Let’s go ahead download dataset publication play . can start simply downloading using code (copy url website download via browser, R?). Okay, downloaded data can go ahead look working directory (’re sure type “getwd()” R see ). Let’s go ahead read R can also look ’s read . , use tidyverse package, readr. Now read , can view data either simply running “HylaeusData” “View(HylaeusData)”. can also scroll dataset. Q2: View()ing data, tell us, third column 5th row? can find info getting started R RStudio, along tutorials Coding Club.","code":"utils::download.file(url = \"https://raw.githubusercontent.com/jbdorey/BIOL361_25/main/DoreyPrac1/SuppCollectionInfo_7Aug2023.csv\",                      destfile = \"SuppCollectionInfo_7Aug2023.csv\",                      method=\"curl\") # read in the data using readr HylaeusData <- readr::read_csv(\"SuppCollectionInfo_7Aug2023.csv\") #> New names: #> Rows: 84 Columns: 42 #> ── Column specification #> ──────────────────────────────────── Delimiter: \",\" chr #> (31): recordNumber, otherCatalogNumbers, catalogNum... dbl #> (7): year, month, day, individualCount, coordinate... lgl #> (2): ...27, ...42 date (1): eventDate time (1): eventTime #> ℹ Use `spec()` to retrieve the full column specification #> for this data. ℹ Specify the column types or set #> `show_col_types = FALSE` to quiet this message. #> • `` -> `...27` #> • `` -> `...42`"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"got-a-problem-with-r-check-here","dir":"Articles","previous_headings":"","what":"Got a problem with R? CHECK HERE!","title":"Evolution Prac 1 — Getting ready!","text":"made first iteration pracs 2024. means one year students (~71 people) already practicals. came common issues decided help collating list issues potential fixes (suggestions). can found Week 5 prac article! know means? problem, go check first :) also update practicals improve learning new errors may occur. patient pracs tested also run agnostic machine (GitHub) make sure can work computer mine. , now ’re running 100 new computers 100 new hands typing possible error ;)","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac1.html","id":"whats-coming-next-week","dir":"Articles","previous_headings":"","what":"What’s coming next week?","title":"Evolution Prac 1 — Getting ready!","text":"Next week, downloading data GenBank using web browser using R. data played around little bit, ’ll time explore maybe start thinking data want use Grant Proposal assignment!","code":""},{"path":[]},{"path":[]},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"working-directory","dir":"Articles","previous_headings":"1 Script preparation","what":"Working directory","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"start , let’s set working directory place makes sense. use working directory , preferably, keep data scripts associated project. , start putting files scripts computer, increase chances losing change file names paths , want share whole project, can share everything compressing sharing one folder. Save folder next week!","code":"# Set the RootPath to EPrac2 folder RootPath <- \"YourFolderPathHere\"   # You can then set this as the project's working directory.    # This is where R will first look to find    # or save data as a default setwd(RootPath)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"install-packages","dir":"Articles","previous_headings":"1 Script preparation","what":"Install packages","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"R programming language base several default packages. , R open-source programming language, currently 20,853 packages available “CRAN”; official R package repository. Additional reliable R packages can sourced bioconductor (2,300 packages working biological data) countless others GitHub. say possibilities analyses R nearly endless, free, open source, widely used. makes R incredibly powerful language learn education, research, future career. start , need install basic packages. particular, install packages tidyverse benefits R’s base packages tend quicker , importantly, much easier code understand. ’ll notice actually defining R object simple character vector called “packageList” feeding base R install.packages() function.   ’re , don’t run just word console see comes . can also run object base R class() function see type . Q1: input “packageList” vary comes run R console? Q2: class “packageList”?","code":"packageList <- c(     # Tidyverse packages:   \"dplyr\",            #  For data management and table manipulation   \"magrittr\"          #  to use tidy pipes; %>% )  # List the new (not installed) packages and then if there are any, install them. install.packages(pkgs = c(packageList),                rebuild = FALSE,               repos = \"http://cran.us.r-project.org\") packageList class(packageList)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"load-packages","dir":"Articles","previous_headings":"1 Script preparation","what":"Load packages","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"Even though installed packages, actually need explicitly call package using library() function. tells R packages use can solve issues one function called multiple packages. , let’s go ahead load packages just installed. prefer go one step , removes issue almost entirely, useful going scripts making easy find errors understand ’s happening. can, function, explicitly call package using two colons — package**::**function(). example: Now, ’s probably enough introduction R. can work later time course topic. Now, let’s get onto subject hand… Harvesting genetic data.","code":"# Load all packages from the list specified above lapply(c(packageList),         library, character.only = TRUE) # We can explicitly call the base package's \"library\" function.   # However, I tend to not do this with the base and default packages. base::library(dplyr)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"accessing-genbank-over-a-browser","dir":"Articles","previous_headings":"","what":"Accessing GenBank over a browser","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"several places online download published genetic data, life sciences, GenBank probably major host. , sole repository. Especially increasing amounts next generation sequencing datasets, authors hosting data generalist repositories like FigShare. also going access genetic data GenBank using R. However, think still much worthwhile taking initial look website personally access data first instance. Navigate GenBank homepage now. top page, search bar, search “Databases” one Darwin’s finches, “Geospiza conirostris” (Fig. 1). search return something like (Fig. 2). Now, ’s quite lot see GenBank broken literature sources citations (helpful!). also provides data form genomes various sources, genes, genetic data associated health issues (“Clinical”), proteins. Basically, GenBank seeking able host share whole bunch molecular data anyone wants use . Great open science! Just remember, use data must cite original source! Good thing GenBank gives citation .","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"searching-a-taxon","dir":"Articles","previous_headings":"2 Accessing GenBank over a browser","what":"Searching a taxon","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"Genes, let’s click PopSet. see whole bunch single gene region extracts finches species, information gene sequenced (e.g., MHC class IIB antigen pseudogene, cytochrome b, ornithine decarboxylase, stupid gene names…), information extracts. Underneath information help decide might like look , number sequences provided type study. Let us click “Passeriformes MHC class IIB antigen pseudogene, partial sequence.” look little closer. Q3: many sequences alignment? Q4: title journal study produced genes shared GenBank? Q5: gene accession number “AY064447.1”, click number tell us, first 10 basepairs sequence? HINT: look bottom page. Q6: alignment page, can find download entire alignment sequnces FASTA format? HINT: search page “FASTA” click link; page top right use “Send :” drop select “File” click “Create File”. Q7: fasta file look like information contain? Fasta files one commonly used formats genetic data. nice simple files essentially just plain text store two data types (Q7). simplicity makes powerful easy understand.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"searching-a-group","dir":"Articles","previous_headings":"2 Accessing GenBank over a browser","what":"Searching a group","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"Now, let’s make useful search. Let us try find data ’s available Darwin’s finches genera Geospiza, Cactospiza, Camarhynchus, Certhidea. Go back GenbBank homepage instead searching “Databases”, search “Nucleotide” click “Search” text bar empty , following page, click “Advanced”. , can start build advanced query. > 1. first field, enter “cytb” mitochondrial gene “cytochrome b”; commonly used gene shallow (~recent divergences) inter-species phylogenetic analyses. Choose drop-“Gene Name” “Fields”. next four fields put four bird genera names choose drop-“Organism” “” drop-downs, choose “” click “Search” (Fig. 3) chosen “”s, actually cytB genes species ! Oops! However, can fix make much better search search bar top, can see search turned text query! “((((cytb[Gene Name]) Geospiza[Organism]) Cactospiza[Organism]) Camarhynchus[Organism]) Certhidea[Organism]” can see query bounded bunch confusing brackets. specifying relationships query, want find cytB genes () four genera, can enclose gene name genera, separated “” specify . Go ahead make change paste query search bar. “(cytb[Gene Name]) (”Geospiza”[Organism]) “Camarhynchus”[Organism] “Certhidea”[Organism])” Now, ’ll see crazy genetic materials including genomic data (genes cell nucleus). left-hand side ’s filter can choose called “Mitochondrion” (search page need). Click ’ll see ’s mostly left bunch 800 1,120 basepair sequences. , also much long full mitogenomes (>16,000 bp) sequences different lengths (probably differing due sequencing filtering methods used production). may also note “mitochondrion[filter]” also added search query.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"download-sequence-data-from-the-browser","dir":"Articles","previous_headings":"2 Accessing GenBank over a browser","what":"Download sequence data from the browser","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"point, might go sequences try find one species want include, subset species. might sort sequences length (Fig. 4) look longest sequence species scroll page. don’t take moments try find longest sequences species cytB data GenBank? Hint: 14 species can see cytB : Geospiza magnirostris, Geospiza fortis, Camarhynchus heliobates, Geospiza difficilis, Geospiza conirostris, Certhidea fusca, Certhidea olivacea, Camarhynchus psittacula, Camarhynchus parvulus, Camarhynchus pauper, Geospiza fuliginosa, Geospiza scandens, Geospiza septentrionalis, Camarhynchus pallidus. download fasta file copy together text editor, just click “FASTA” sequence copy fasta text text file (Fig. 5). Note: mac users BBEdit fantastic free text editor (Fig. 6). Save file informative name R working directory file suffix “.fasta”. Maybe something like darwinFinches_cytB.fasta — skip part right now favor showing , quickly, accomplish R. However, reading fasta R really simple using ape package (see example line code next section). Warning: Sometimes computer try save darwinFinches_cytB.fasta.txt. either need remove include read ape.","code":"DarwinFinches_cytB <- ape::read.FASTA(\"darwinFinches_cytB.fasta\")"},{"path":[]},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"examining-genbank-databases","dir":"Articles","previous_headings":"3 Accessing GenBank in R","what":"Examining GenBank databases","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"Now, ’ve explore GenBank nice browser, can look accessing right R. Gasp! , ’re going want extra packages creator R — short-sighted — consider us phylogeneticists making programming language … >:(","code":"# Let's install some packages the old-fashioned way just to show you how # Accesses GenBank's \"Entrez Utilities\" API through R (i.e., it searches GenBank) install.packages(\"rentrez\",               repos = \"http://cran.us.r-project.org\") # A central R phylogenetics package that stands for \"Analysis of Phylogenetics and Evolution\" install.packages(\"ape\",               repos = \"http://cran.us.r-project.org\")     # Let's do the same by loading them in library(rentrez) library(ape)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"run-a-genbank-query","dir":"Articles","previous_headings":"3 Accessing GenBank in R","what":"Run a GenBank query","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"Let us dive right querying GenBank R. First, lets use entrez_search() “nucleotide” database using previous search term. Note: remove internal quotes search “term”. Use following term: “(cytb[Gene Name]) (Geospiza[Organism]) Camarhynchus[Organism] Certhidea[Organism]) (mitochondrion[filter])” Q8: many search results found number seem familiar?","code":"myFirstSearch <- rentrez::entrez_search(db = \"nucleotide\",               term = \"(cytb[Gene Name]) AND (Geospiza[Organism]) OR Camarhynchus[Organism]                OR Certhidea[Organism]) AND (mitochondrion[filter])\",                 # With this new search term, I can see 171 sequences, which is enough for me to                 # download, I think! So, I'll set this in retmax               retmax = 200)  # Inspect the object and answer the question below myFirstSearch"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"accessing-r-help-files","dir":"Articles","previous_headings":"3 Accessing GenBank in R > 3.2 Run a GenBank query","what":"Accessing R help files","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"Let’s take quick interlude point. Let us say novices don’t know function can ? Well, R help tip using years come. want quickly bring function’s help file simply run “?function”. case, let’s closer look entrez_search() typing “?entrez_search” R console. see bunch information hopefully help understand use function! Q9: help file say “Description”?","code":"# Access the help file for the function entrez_search ?entrez_search"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"download-genetic-data","dir":"Articles","previous_headings":"3 Accessing GenBank in R","what":"Download genetic data","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"can use ape package accession numbers download fasta data right onto computers. use read.GenBank() function ape, don’t first run “?read.GenBank” look help file, especially focus Description, Arguments, Value sections. Note: R objects kind “list” can access elements list R operator “$”. example, type “myFirstSearch$” console wait moment, come drop list objects inside object! really important, now download genetic data, need GenBank accession numbers stored “$ids” slot object.","code":"# Download the data from GenBank using the ids that you got from rentrez DarwinFinches_cytB <- ape::read.GenBank(access.nb = myFirstSearch$ids)  # What type of file is this?  class(DarwinFinches_cytB)  # What does it look like? DarwinFinches_cytB  # Have a look at one sequence with the accession number \"56682244\" DarwinFinches_cytB$`56682244`   # Wow, those data are stored really strangely! I agree. DNAbin objects store genetics data   # in non-user-friendly ways. Many genetics programs do, in fact. I bet that you miss that   # simple fasta now  # However, this format also allows extra attributes to be saved! So, let's save this as an R   # object for next week base::saveRDS(DarwinFinches_cytB,          file = \"DarwinFinches_cytB.rds\")  # Let's save this fasta file ape::write.FASTA(DarwinFinches_cytB,                  file = \"DarwinFinches_cytB.fasta\")"},{"path":[]},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"think-about-a-taxon-thats-interesting-to-you","dir":"Articles","previous_headings":"4 Start thinking about your project","what":"Think about a taxon that’s interesting to you","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"Now , ’s time choose taxon might interested looking ! might already good idea taxon ’re interested ! Maybe ’re frogs, lizards, birds, wasps, bees, whatever! Maybe idea! Regardless, ’d suggest choosing group reasonable deal overwhelming. Maybe somewhere 7 30 species? can always choose bigger group well take step backwards regards many species include group (don’t need include ). , earth know ? Well, can provide little guidance quick way start querying taxa size. Keep mind even group 10 species, may able get genetic data 10 species — , need genetic data aligns (.e., gene part gene). , maybe shoot species search ’s available. function, taxadbToBeeBDC() BeeBDC package get taxon names GBIF, Global Biodiversity Information Facility, return table valid old names species. use dplyr package filter “accepted” names, group “genus” return table count valid species genus. Please, feel free play around point! Note: taxa, GBIS ideal choice taxon provider. good alternative Integrated Taxonomic Information System (ITIS). can change provider = \"gbif\" provider = \"itis\". Simple. Note: may get error code. Please read error, think , see can solve ! big part programming able read solve errors. can also totally google ask ChatGPT (use ChatGPT extreme caution; can lead problems)! fail, ask demonstrator.   Q10: bee genus Apidae family species , according GBIF? Note: hey, minute, James, shit “%>%” crap? Well, ’m glad [forced] ask! ’s called pipe ’s magrittr package. essentially passes output first function forwards (%>%) next function. equivalent running , ’s much quicker neater. See BeeBDC_query needs get passed every single time next line -written? Using pipes can make coding much easier read, write, error-find!","code":"# A useful package for taxonomic and occurrence data install.packages(\"BeeBDC\",               repos = \"http://cran.us.r-project.org\") library(BeeBDC)    # Run the BeeBDC query speciesCountTable <- BeeBDC::taxadbToBeeBDC(name = \"Apidae\",                                rank = \"Family\",                                provider = \"gbif\") %>%   dplyr::filter(taxonomic_status == \"accepted\") %>%   dplyr::group_by(genus) %>%   dplyr::count()  #As usual, what class is returned? class(speciesCountTable)  # What did we make? speciesCountTable  # Did you know that you could sort the table? You could either look at the function: ?dplyr::arrange   # or run: #View(speciesCountTable) # REMEMBER: R is case-sensitive!   # and sort by the \"n\" column BeeBDC_query <- BeeBDC::taxadbToBeeBDC(name = \"Apidae\",                            rank = \"Family\",                            provider = \"gbif\")    BeeBDC_query <- dplyr::filter(BeeBDC_query, taxonomic_status == \"accepted\")   BeeBDC_query <- dplyr::group_by(BeeBDC_query, genus)   speciesCountTable <- dplyr::count(BeeBDC_query)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"what-genetic-markers-are-out-there","dir":"Articles","previous_headings":"4 Start thinking about your project","what":"What genetic markers are out there?","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"Okay, ’ve given tools ’ll need choose taxonomic group query GenBank get data. rest . still time prac, please start playing around searching group might interest . Additionally, genes choose ! used cytB , loads commonly used genes. examples include: COI — Cytochrome c oxidase subunit (mitochondrial) EEF1A1 — eukaryotic translation elongation factor 1 alpha 1 (nuclear) 16S rRNA (ribosomal RNA) 28S rRNA (ribosomal RNA) rRNA — Internal transcribed spacer (ribosomal RNA) plenty . , choose taxon look ’s available! Especially initial search might better done using online version GenBank Q12: … taxon ’s interesting ; might appropriate number species; appropriate number genetic sequences; gene region fit criteria?","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac2.html","id":"whats-coming-next-week","dir":"Articles","previous_headings":"","what":"What’s coming next week?","title":"Evolution Prac 2 — Access genetic data from GenBank","text":"Next week, putting genetic data gather week together! begin aligning sequences together begin phylogenetic inference (making phylogenetic trees). , try make sure ’ve got something next week. Even ’s just Darwin’s finches. certain save R script week help next week! don’t, well… sounds like ’ve got catching . Attention: end Week 4, want data mentioned Question 12. need show demonstrator.","code":""},{"path":[]},{"path":[]},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac3.html","id":"working-directory","dir":"Articles","previous_headings":"1 Script preparation","what":"Working directory","title":"Evolution Prac 3 — Aligning genetic data and building phylogenies in R","text":"Just like last prac, set working directory. , likely, directory used last week ’s one project.","code":"# Set the RootPath to Prac1 folder RootPath <- \"YourFolderPathHere\"   # You can then set this as the project's working directory.  setwd(RootPath)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac3.html","id":"install-packages","dir":"Articles","previous_headings":"1 Script preparation","what":"Install packages","title":"Evolution Prac 3 — Aligning genetic data and building phylogenies in R","text":"already packages last week installed. installed ’m sure can figure using example copying code last prac!","code":"packageList <- c(     # Tidyverse packages:   \"tibble\",            #  A lovely table format package   \"tidyr\",             # Another data maniupulation package from the tidyverse   \"stringr\"           #  to manipulate text strings )  # List the new (not installed) packages and then if there are any, install them. install.packages(pkgs = c(packageList),                rebuild = FALSE,               repos = \"http://cran.us.r-project.org\")"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac3.html","id":"load-packages","dir":"Articles","previous_headings":"1 Script preparation","what":"Load packages","title":"Evolution Prac 3 — Aligning genetic data and building phylogenies in R","text":", need load packages R, even ones used last week probably unloaded closed R following last session. week, ’ll use base function, lapply() apply function list. case, apply package list library() function. also add relevant packages last week want use week. one go!","code":"lapply(c(packageList, \"dplyr\", \"magrittr\", \"ape\", \"rentrez\"),         library, character.only = TRUE)"},{"path":[]},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac3.html","id":"read-data-in","dir":"Articles","previous_headings":"2 GenBank data","what":"Read data in","title":"Evolution Prac 3 — Aligning genetic data and building phylogenies in R","text":"Let us start reading fasta file back last week. ’ve saved file, go ahead download version GitHub save working directory now. using code. addition last week also get outgroup sequence sister taxon, Asemospiza obscura, help phylogenetic analysis root tree (.e. help place recent common ancestor finches). found outgroup publication “Phylogeny Darwin’s finches revealed mtDNA sequences” found cytB sequence accession number GenBank — “HQ153059”! Note: publication, species called Tiaris obscurus, seems like name changed! something aware ; taxonomy changes. Great, pretty easy wasn’t ? demonstrates one major advantages running kinds things language like R; things set can run quite quickly. , easily reproducible resilient new mistakes! ’s important science. Assignment tip: Last year issue downloading many sequences R. year formalised fix issue (see info). ’re trouble downloading say >300 sequences one go, try code!","code":"utils::download.file(url = \"https://raw.githubusercontent.com/jbdorey/EvolutionPracs/main/vignettes/DarwinFinches_cytB.rds\",                      destfile = \"DarwinFinches_cytB.rds\",                      method=\"curl\") # Read in the data from last week DarwinFinches_cytB_lw <- base::readRDS(\"DarwinFinches_cytB.rds\")  # Download the outgroup cytB sequence, HQ153059, for the sister taxon, *Asemospiza obscura* A_obscura_cytB <- ape::read.GenBank(access.nb = \"HQ153059\")  # We can combine the dataset from last week with the outgroup DNAbin objects simply # by appending them together. DarwinFinches_cytB <- append(DarwinFinches_cytB_lw, A_obscura_cytB)  # Annoyingly, we need to manually re-create the attributes for the DNAbin object and then re- # add them to the DNAbin object DarwinAttributes <- list(   names = c(attributes(DarwinFinches_cytB_lw)$names,              attributes(A_obscura_cytB)$names),   class = attributes(DarwinFinches_cytB_lw)$class,   description = c(attributes(DarwinFinches_cytB_lw)$description,                    attributes(A_obscura_cytB)$description),   species = c(attributes(DarwinFinches_cytB_lw)$species,                attributes(A_obscura_cytB)$species) )  attributes(DarwinFinches_cytB) <- DarwinAttributes # Go ahead and install the package \"remotes\", which we can use to install a very basic package from Github. install.packages(\"remotes\")   # Now, install this as a package using Remotes to access Github — if you have a permissions issue, look at THE END OF \"read.GenBank error\" in Prac 5 remotes::install_github(\"jbdorey/EvolutionPracs\", quiet = TRUE, upgrade = \"never\")   # Now, you have a package called \"EvolPracs\" pracs installed and you can use function EvolPracs::DoreyGenbank() to call from Genbank!    # I have made you download the package this way so that you can access my help file using ?EvolPracs::DoreyGenbank   # Here is an example usage of the function that will search using entrez and then download using ape!  exampleAssignmentDownload <- EvolPracs::DoreyGenbank(db = \"nucleotide\",                      term = \"(cytb[Gene Name]) AND (Apis[Organism])\",                       # The maximum number of sequences to return                      retmax = 500)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac3.html","id":"filter-sequences","dir":"Articles","previous_headings":"","what":"Filter sequences","title":"Evolution Prac 3 — Aligning genetic data and building phylogenies in R","text":"Alright, now ’ve little preach, let’s address another issue. 171 sequences, one per species. might fine depending analysis ’ll complicate things line way really just don’t need. Lets make things easy; ’ll try take one individual per species. , sequences length! Longer sequences might lead better chances overlapping gene regions, lets first figure long sequence . Unfortunately, ape doesn’t keep sequence length attributes file, can figure using lapply() — function used read packages library() function! Let us length() function. Note: Sometimes ’ll give complex/confusing script, like , don’t stress much understanding data manipulations yet, just focus outputs mean. Q1: range sequence lengths seqLengths? Now, know lengths want use help us choose sequences take. ’ll now create data frame (tibble tibble package nearly thing bit nicer) information might want choose sequences! Note: , code looks bit confusing, see just calling cells go column individually ? accessionID column takes names within attributes(DarwinFinches_cytB), etc. Q2: think happen table seqLengths order accession numbers rest table? Great, now can quickly look data downloaded make choices sequences ’re going keep. simplicity’s sake, let’s just take sequence longest per species. need sort sequence length choose top sequence. can help us ? good friend dplyr. Note: may full partial mitochondrial genomes data (lengths > 10,000 basepairs). filter() simplicity Additionally, actually two sequences (1) cytB sequence (2) control region cytB. ’ll also remove “control region” sequences ; aware project check alignments. Q3: ’s longest sequence ’s range sequence lengths? Amazing. , now table information want, filter DNAbin object include specimens want? Well, now found longest sequences using data manipulation, let’s try use accession numbers table filter DNAbin object. R, usually several different ways thing. , use base R syntax, square brackets, select matching elements ’s inside square brackets. Q4: name 5th sequence DarwinFinches_cytB? Q5: name 5th sequence finchSpecies? Q6 run “finchSpecies”, base composition (proportion) “”?","code":"# Find the sequence lengths and turn them into a numeric list in order of how they were # found in DarwinFinches_cytB seqLengths <- lapply(DarwinFinches_cytB, length) %>%   as.numeric() # Lets build a tibble column-by-column genBankSummaryTibble <- tibble::tibble(   accessionID = attributes(DarwinFinches_cytB)$names,   species = attributes(DarwinFinches_cytB)$species,   seqLength = seqLengths,   description = attributes(DarwinFinches_cytB)$description, )   # Let's have a look! genBankSummaryTibble # Let us begin to manipulate the tibble to do what we want!   # We will put this new table into a new R object called theChosenSeqs theChosenSeqs <- genBankSummaryTibble %>%     # Keep only sequences less than 1,500 basepairs to ignore the mitogenomes   dplyr::filter(seqLength < 1500) %>%     # remove the control region sequences       # What's that \"!\" mean?! This simple bit of syntax just means \"get the opposite of\"        # so, instead of returning all strigns where \"control region\" is detected, it        # returns all where it is NOT detected.   dplyr::filter(!stringr::str_detect(description, \"control region\")) %>%     # Group the data by species and then any sorting or filtering will be done     # WITHIN that group   dplyr::group_by(species) %>%     # Sort by species and then by sequence length (top-down; descending)   dplyr::arrange(species, dplyr::desc(seqLength))  # Quickly, have a look at what you've made... theChosenSeqs  # Now, let us take the top sequence of each group theChosenSeqs <- theChosenSeqs %>%   dplyr::filter(dplyr::row_number() == 1) # List objects often have names for each element in the list; have a look at those names(DarwinFinches_cytB)  # If we wanted to take the FIRST element, we could simply call the first element DarwinFinches_cytB[1] # We could call an element using its name DarwinFinches_cytB[\"56682246\"]  # Extending this logic, we can use the accessionID column from theChosenSeqs to filter out # all of the sequences that we're interested in. finchSpecies <- DarwinFinches_cytB[theChosenSeqs$accessionID]  # But you know what having accession numbers alone is a bit annoying. Lets add # species names as well!   # NOTE: This is an example of complex code that you need not worry too much about attributes(finchSpecies)$names <- stringr::str_c(theChosenSeqs$species,                                                  theChosenSeqs$accessionID,                                                  sep = \"_\")"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac3.html","id":"align-sequences","dir":"Articles","previous_headings":"","what":"Align sequences","title":"Evolution Prac 3 — Aligning genetic data and building phylogenies in R","text":"Now 15 sequences; one per species cytB dataset GenBank. , sequences far just running first base pair last… can’t say base pair position 1 descent (homologous). want compare base pairs might changed time every site along sequences; need align sequences. Sometimes straightforwards, sometimes really . let’s find together ’ve got easy alignment ahead us!   zoned last section, start paying attention ! Take deep breath, quite adventure! now first look sequences. ’ll notice things look little messy, especially letters don’t really line nicely along columns. expect unaligned set sequences. Maybe can even start see might match ! , let’s see can change . alignment look? Can see sections align better others? see sequences look better others? cases, may sequence align well may need removed. project, problem, may choose remove , add different sequence species. can feel free either text editor R; whatever ’re comfortable . Now reasonable alignment 15 species. ’s certainly enough make tree !","code":"# Here, we'll use a package called msaR to observe and align our sequences install.packages(\"msaR\",               repos = \"http://cran.us.r-project.org\") # We also need the BiocManager to install packages from bioconductor, where many  # genetics packages, like Biostrings and msa, are found install.packages(\"BiocManager\",               repos = \"http://cran.us.r-project.org\")   # you may get asked to install extra packages, select all \"a\" BiocManager::install(\"Biostrings\") BiocManager::install(\"msa\") library(msaR) library(Biostrings) library(msa) # msaR agrees that fasta is a fantastic data format and but it recognises that not  # everyone thinks this way. So, it has provided a function to transform a DNAbin object, # among several others, to fasta finchSpecies_fasta <- msaR::as.fasta(finchSpecies)  # You can have a look at this output file and it looks like a horrible text string, but # if you look closer, you'll see that it's a fasta text string with line breaks denoted # by \"\\n\" for \"new line\". finchSpecies_fasta  # But, many R programs demand sequences of equal length. Don't worry too much about the  # below but let me help you out here...   # Please DON'T FREAK OUT when seeing this code; I'm just giving it to you    # to do some data wizardry (with some notes IF you're interested) # First, lets add our fasta text into the \"sequence\" column of a new tibble (data frame) lengthCorrectionTable <- tibble::tibble(sequence = finchSpecies_fasta) %>%     # Separate sequences from one another, using the \">\" as a delimiter    tidyr::separate_longer_delim(cols = \"sequence\",                                delim = \">\") %>%      # Remove the first row from the tibble   dplyr::filter(!dplyr::row_number() == 1 ) %>%   dplyr::as_tibble() %>%     # Remove the hanging line break at the end of each sequence   dplyr::mutate(sequence = sequence %>% stringr::str_remove(\"\\\\n$\")) %>%      # Use the name > sequence line break to separate them   tidyr::separate_wider_delim(sequence, delim = \"\\n\",                               names = c(\"name\",\"sequence\")) %>%      # THIS is the magic part, let's add blank \"-\" loci to pad out our alignments to the same length   dplyr::mutate(lengthenedSequence = stringr::str_pad(sequence, pad = \"-\", side = \"right\",                                                       width = max(stringr::str_count(sequence))),                   # If you want, you can check this object to see that lengths are the same                 length2 = stringr::str_count(lengthenedSequence))    # Now, we can turn this back into a fasta format... Asian don't worry too much about # this code. equalisedFasta <- stringr::str_c(\">\",lengthCorrectionTable$name,\"\\n\",                                  lengthCorrectionTable$lengthenedSequence,                                   collapse = \"\\n\")  # Now, let's save this fasta file for later use write(equalisedFasta, \"equalisedFasta.fasta\")  # We can read this fasta in as a Biostrings object equalised_BioString <- Biostrings::readDNAStringSet(\"equalisedFasta.fasta\") # START PAYING ATTENTION AGAIN! # finally, we can interactively look at our alignment! msaR::msaR(equalised_BioString, menu=T, overviewbox = T, labelNameLength = 200) # We can use the msa, Multiple Sequence Alignment package to align our sequences  alignedFinches <- msa::msa(equalised_BioString) #> use default substitution matrix  # Then we can access the @unmasked slot of the alignment and view the results msaR::msaR(alignedFinches@unmasked, menu=T, overviewbox = T, labelNameLength = 200)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac3.html","id":"make-a-phylogeny","dir":"Articles","previous_headings":"","what":"Make a phylogeny","title":"Evolution Prac 3 — Aligning genetic data and building phylogenies in R","text":"learn next lecture, different ways build trees. , now let’s keep pretty simple.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac3.html","id":"distance-tree","dir":"Articles","previous_headings":"5 Make a phylogeny","what":"Distance tree","title":"Evolution Prac 3 — Aligning genetic data and building phylogenies in R","text":"Lets make one simplest trees possible, neighbour-joining tree. kind tree built based genetic distances sequences. closer sequences, closer ’ll tree! can also tell ape outgroup species make species sister taxa. Q7: instantly jumps nj tree groupings? Q8: nj bionj trees different?","code":"# Let us start by converting the msa format sequences back into ape's DNAbin format alignedDNAbin <- ape::as.DNAbin(alignedFinches@unmasked)  # We then need to build a pairwise distance matrix — the distances between each # pair of sequences  distanceFinches <- ape::dist.dna(alignedDNAbin) # Go ahead and have a look at the matrix distanceFinches # Now we can use that distance matrix to build a phylogenetic tree njFinches <- ape::nj(distanceFinches) %>%     # Specify the outgroup to be sister to all other taxa   ape::root(outgroup = \"Asemospiza_obscura_HQ153059\")  # This is a tree object of class \"phylo\", and we need to visualise it with another  # function... creatively called \"plot\" njFinches  # Let's have a look! plot(njFinches)   # If you have gaps in your sequence, you could look at ?ape::njs()  # the ape package also provides an \"improved\" version of the nj algorithm.    # Why not compare the tree? ape::bionj(distanceFinches) %>%   ape::root(outgroup = \"Asemospiza_obscura_HQ153059\") %>%    plot() # Are you starting to understand how we use the pipes (%>%) from the magrittr package?"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac3.html","id":"maximum-likelihood","dir":"Articles","previous_headings":"5 Make a phylogeny","what":"Maximum likelihood","title":"Evolution Prac 3 — Aligning genetic data and building phylogenies in R","text":"neighbour-joining tree nice, quick, easy, robust implementation tree-building. methods exist learn next week. , now let’s peak methods trees see anything jumps us. ’ll want yet another package, — “phangorn”, Phylogenetic Reconstruction Analysis.   Next week talking genealogies models evolution don’t want overload now. However, short prelude might : , T, C, G can evolve differently can mutate --different states way expect random chance. , clever folks come various models evolution account . model choose depends data terms model best fits data data rich enough make using complex model possible! Let us use phangorn’s modelTest() function look . modelTest() function lets compare model best fit data. Let help least interpret values returns! don’t expect remember , helpful concepts phylogenetics statistics large. df — degrees freedom logLike — log likelihood. likelihood values often small (like really small), take log. Log values <1 negative values get negative add decimal places. Hence, larger number (e.g., -100 > -500) likely! Side quest: don’t compare outputs log(0.1); log(0.0001); log(0.00000001) AIC — Akaike information criterion provides comparison models, given set data. , smaller AIC value represents parsimonious (.e., simpler) option, given data. relative measure support numbers can compared within alternative hypotheses. BIC — Bayesian Information Criterion similar AIC except also considers number observations formula. , lower value better. Q9: model best supported three statistics? can also ask phangorn choose best model ! Q10: many different rates REALLY model? Q11: relative rates change rates? Now, let’s make bootstrapped maximum likelihood tree! Q12: ’s different tree last one? Q13: nodes better supported others? also going save DNAbin data use next week’s prac.","code":"# install and load phangorn install.packages(\"phangorn\",               repos = \"http://cran.us.r-project.org\") library(phangorn) # Sadly we need to transform yet another data format from DNAbin to phyDat # Don't ask me why they do this to us ;) aligned_phyDat <- phangorn::phyDat(alignedDNAbin)   # Do you see how we try to name objects so that they are concise but human-readable?  # Run the model test finchTest <- phangorn::modelTest(aligned_phyDat,                               # Which models to compare                             model=c(\"JC\", \"F81\", \"K80\", \"HKY\", \"SYM\"),                               # Let's not worry about invariant (I) or gamma (G)                               # variables for now. Look these up later IF you need                             I = FALSE, G = FALSE) # Find me the best model, phangoorn! fit_mt <- phangorn::pml_bb(finchTest,                    # Change to trace = 1 to see more outputs                  control = phangorn::pml.control(trace = 0))  # Now have a look at the best model and the relative rates of mutations table!  fit_mt # You can then feed in the fit_mt from above to build your bootstrap tree bs <- phangorn::bootstrap.pml(fit_mt,                                  # Using 100 bootstraps                               bs = 100, optNni = TRUE,                               method = \"ultrametric\",                               control = phangorn::pml.control(trace = 0))  # Plot your maximum likelihood tree. You will input a \"tree\" which should be the # \"Maximum clade credibility\" tree (i.e., the statistically best tree from your  # bootstrap), then you can give the bootstrap trees (BStrees), which include ALL # of the bootstrap trees phangorn::plotBS(   tree = bs %>%       # Find the Maximum clade credibility tree     phangorn::maxCladeCred() %>%        # We can root the tree at this point     ape::root(outgroup = \"Asemospiza_obscura_HQ153059\"),   BStrees = bs ,    p = 10, type=\"p\", digits=2, main=\"Ultrafast bootstrap\") # Save the DNAbin as a fasta file ape::write.FASTA(alignedDNAbin,                  \"alignedDNAbin.fasta\")"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac3.html","id":"do-you-really-hate-doing-this-in-r","dir":"Articles","previous_headings":"","what":"Do you REALLY hate doing this in R?","title":"Evolution Prac 3 — Aligning genetic data and building phylogenies in R","text":"Listen… ’m entirely without compassion. Sometimes stuff R might just hurt brain much. Maybe, just maybe, consider forced code EVERYTHING emotional abuse. may agree, others ;) already given way manually download data GenBank. also manual/GUI ways align sequences build trees! fact, broadly implemented can still good way learn certainly can good way science. just tend prefer offering way everything one place. mind, also built tutorial help align sequences build tree using simple enough GUI program called Molecular Evolutionary Genetics Analysis (MEGA). program can downloaded . tutorial located .","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac3.html","id":"your-homework","dir":"Articles","previous_headings":"","what":"Your homework","title":"Evolution Prac 3 — Aligning genetic data and building phylogenies in R","text":"Attention: end Week 4 (next week), want data mentioned Question 12; prac 2. need show demonstrator. re-phrased : Q12; prac 2: Show demonstrator… taxon ’s interesting ; number species group; appropriate number ALIGNED sequences (7 = 30 species/subspecies); gene region chosen?","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac3.html","id":"whats-coming-next-week","dir":"Articles","previous_headings":"","what":"What’s coming next week?","title":"Evolution Prac 3 — Aligning genetic data and building phylogenies in R","text":"Next week focusing something interesting useful phylogeny! starting think harvesting ecological, phenotypic, biogeographic data test macro-evolutionary hypothesis using phylogeny. using Darwin’s finches advanced enough least idea group examine project. certain save R script week help next week! don’t, well… sounds like ’ve got catching .","code":""},{"path":[]},{"path":[]},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"working-directory","dir":"Articles","previous_headings":"1 Script preparation","what":"Working directory","title":"Evolution prac 4 — Macroevolutionary questions!","text":"Just like last prac, set working directory. , likely, directory used last week ’s one project.","code":"# Set the RootPath to Prac1 folder RootPath <- \"YourFolderPathHere\"   # You can then set this as the project's working directory.  setwd(RootPath)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"install-packages","dir":"Articles","previous_headings":"1 Script preparation","what":"Install packages","title":"Evolution prac 4 — Macroevolutionary questions!","text":"already packages last week installed.","code":"#  A tidyverse package for reading in Excel sheets install.packages(\"readxl\",               repos = \"http://cran.us.r-project.org\")"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"load-packages","dir":"Articles","previous_headings":"1 Script preparation","what":"Load packages","title":"Evolution prac 4 — Macroevolutionary questions!","text":", need load packages R.","code":"lapply(c(\"dplyr\", \"magrittr\", \"ape\", \"rentrez\", \"tidyr\", \"stringr\"),         library, character.only = TRUE)"},{"path":[]},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"genetic-alignment-from-last-week","dir":"Articles","previous_headings":"2 Load and prepare genetic and trait data","what":"Genetic alignment (from last week)","title":"Evolution prac 4 — Macroevolutionary questions!","text":"Let us start yesterday loading genetic alignment saved last week. can download last week’s alignment using code hosted data online. Okay, downloaded data can go ahead look working directory (’re sure type “getwd()” R see ). Let’s go ahead read R.","code":"utils::download.file(url = \"https://raw.githubusercontent.com/jbdorey/EvolutionPracs/main/EPrac4/alignedDNAbin.fasta\",                      destfile = \"alignedDNAbin.fasta\",                      method=\"curl\") # Use ape to read in the aligned sequences alignedDNAbin <- ape::read.FASTA(\"alignedDNAbin.fasta\")    # Let's also simplify our sequence names (this'll make things easier and    # look better in our tree!) names(alignedDNAbin) <- names(alignedDNAbin) %>%    stringr::str_remove_all(\"HQ[0-9]|[0-9]\") %>%   stringr::str_replace_all(\"_\", \" \") %>%   stringr::str_squish()     # Let's also make the Maximum Likelihood (ML) tree from last week   finchesML <- alignedDNAbin %>%   phangorn::phyDat() %>%   phangorn::pml_bb(model = \"HKY\",                     control = phangorn::pml.control(trace = 0)) %>%   phangorn::bootstrap.pml(bs = 100, optNni = TRUE,                           method = \"ultrametric\",                            control = phangorn::pml.control(trace = 0))      # plot the tree and write it to the object \"treeML\" (treeML <- phangorn::plotBS(   tree = finchesML %>%       # Find the Maximum clade credibility tree     phangorn::maxCladeCred() %>%        # We can root the tree at this point     ape::root(outgroup = \"Asemospiza obscura\"),   p = 10, type=\"p\", digits=2, main=\"Ultrafast bootstrap\") ) #>  #> Phylogenetic tree with 15 tips and 11 internal nodes. #>  #> Tip labels: #>   Camarhynchus parvulus, Camarhynchus pauper, Camarhynchus psittacula, Camarhynchus heliobates, Geospiza scandens, Geospiza conirostris, ... #> Node labels: #>   0.81, NA, 0.26, 0.31, 0.3, 0.41, ... #>  #> Unrooted; includes branch length(s)."},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"finch-trait-data","dir":"Articles","previous_headings":"2 Load and prepare genetic and trait data","what":"Finch trait data","title":"Evolution prac 4 — Macroevolutionary questions!","text":"reason ’ve finches whole time know ’s easy enough get finch data internet! download data Dryad database digitised 6,500 specimens measured David Lack! treasure trove data, thanks David making available! can download data link — https://datadryad.org/stash/dataset/doi:10.5061/dryad.150 — Download full dataset top right hand bar. Save working directory. read “morphLack.xls” finch data table 6,758 data observations across 20 variables. can guess columns : IslandID = island (good biogeography analyses), BodyL = body length; WingL = wing length; TailL = tail length; BeakW = beak width; BeakH = beak height; LBeakL = lower beak length; UBeakL = upper beak length; TarsusL = tarsus length; don’t know N-UBkL … oh well. point traits can start asking macroevolutionary questions . Maybe can get classic look beak size (don’t worry, don’t think ’re treading Darwin’s toes). One potential issue dataset, impressive , lot missing data. , ’s okay. Let us just use one -complete variables like beak height. next thing might consider loads measurements want one per species. take mean median values per species. Firstly, can make quick histogram variable see normally distributed… Q1: range median beak height values? ’ll show , don’t expect emulate , can use Shapiro-Wilk Normality Test statistically test data significantly differs normal distribution","code":"# We can read these data into R very easily using readxl finchData <- readxl::read_excel(\"morphLack.xls\",                          sheet = \"morphLack.TAB\",                           # readxl needs to figure out what's in each column (text,                            # numbers...), so let it read all rows to figure this out.                          guess_max = 7000)  # Have a look at this big data table: finchData # Have a look at the histogram hist(finchData$BeakH) # I'd say that's right-skewed and so let's use a median value # Let's calculate the median for each species and put it into a new column finchSummary <- finchData %>%     # There are two sets of names in the dataset, original and     # updated, let's use the latter and put it in a new column   dplyr::mutate(scientificName = paste(GenusL69, SpeciesL69, sep = \" \")) %>%     # Group by scientificName to calculate the mean within groups   dplyr::group_by(scientificName) %>%     # let's get the median beak height per species   dplyr::summarise(medianBH = median(BeakH, na.rm = TRUE),                     # The range is the max minus the min values per species                    rangeBH = max(BeakH, na.rm = TRUE) - min(BeakH, na.rm = TRUE))   # Have a look at these data by getting a quick summary summary(finchSummary) # If p-value > 0.05, we'd say that we can't reject the null hypothesis (normal   # distribution)... This is close enough! stats::shapiro.test(finchSummary$medianBH)   # The range is NOT normally distributed stats::shapiro.test(finchSummary$rangeBH)   # But, if we log-transform this variable, it is normal! stats::shapiro.test(log(finchSummary$rangeBH))"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"match-genetic-and-trait-data","dir":"Articles","previous_headings":"2 Load and prepare genetic and trait data","what":"Match genetic and trait data","title":"Evolution prac 4 — Macroevolutionary questions!","text":"two different datasets want work together , let’s see well overlap one another start making work together. Looks like ’ve got pretty good overlap! trait data missing three genetic species one outgroup. project, absolutely go hunting extra data , purposes, ’m pretty happy result. can look trait evolution across 12 species data. Now, let’s prune tree make sure data overlap. Now matching datasets. matching datasets, can start answer hypotheses! sections coming, ’ll using book, Phylogenetic Comparitive Methods R Liam Revell & Luke Harmon, reference. ’s great book Liam also author fantastic R package, phytools.","code":"# Let us have a look at how well our taxon names match between the genes # and the trait data   # Extract the DNA names dnaNames <- names(alignedDNAbin) %>%     # Turn them into a data frame (tibble)   tibble::tibble(scientificName = .)    # We can perform a \"left_join\" to put these tibbles together and see what's   # missing!  compareNameTable <- dplyr::left_join(dnaNames, finchSummary, by = \"scientificName\") # We can drop the tips on our tree that don't have trait data associated with them. treeML_dropped <- ape::drop.tip(treeML,                       tip = c(\"Geospiza septentrionalis\", \"Certhidea fusca\",                                \"Asemospiza obscura\"))    # Let's only select the traits for those species in the tree finchSummary <- finchSummary %>%     # We can find the names %in% the tree tip labels slot and filter for those   dplyr::filter(scientificName %in% treeML_dropped$tip.label) %>%     # let's also add the log transformation to normalise our range data   dplyr::mutate(log_rangeBH = log(rangeBH))"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"phylogenetically-independent-contrasts","dir":"Articles","previous_headings":"","what":"Phylogenetically independent contrasts","title":"Evolution prac 4 — Macroevolutionary questions!","text":"comparative biology, often asking questions traits related one another. example, bigger animals larger home ranges? relatively easy question ask answer can simply use regression see correlation two traits. However, key assumption linear regression (like many analyses) data points independent. problem -closely related taxa likely share similar traits considered independent one another. Joseph Felsenstein (1985) pointed issue trait correlations , especially worst case scenarios (Fig. 1), lead misleading results. proposed , traits evolve randomly (Brownian motion) lineage node, correct bias. correction technique termed phylogenetically independent contrasts. mathematics behind correction, ’ll admit, little beyond . However, use tools . moving , let’s make simple hypothesis. Finches larger beak heights larger beak height ranges finches smaller beak heights. idea hypothesis asked , can see provided TESTABLE hypothesis serve great bounding board tests.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"regular-regression","dir":"Articles","previous_headings":"3 Phylogenetically independent contrasts","what":"Regular regression","title":"Evolution prac 4 — Macroevolutionary questions!","text":"Let’s begin using regular-old linear regression test hypothesis. Keep mind , writing , don’t know answer . can ignore phylogeny Q2: Ignoring phylogeny, median beak height log range beak height significantly correlated? ’s significance level (p-value) model?","code":"# We can start by just plotting these two variables to see how they look plot(finchSummary$medianBH, finchSummary$log_rangeBH)    # We should then run a linear regression on the same data   # Firstly, let's make the model! linear_BH <- stats::lm(data = finchSummary,                        formula = log_rangeBH ~ medianBH)   # Have a peak and you might see where the y-intercept and slope of a linear model   # (y = mx + c). In the model, c = Intercept; m = log_rangeBH linear_BH    # Now, let's test our hypothesis! summary(linear_BH) # Like I mentioned, the linear model is just a line; so we can also plot that line! plot(finchSummary$medianBH, finchSummary$log_rangeBH) abline(linear_BH, col = \"red\", lwd = 2)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"phylogentically-independent-contrasts-pic","dir":"Articles","previous_headings":"3 Phylogenetically independent contrasts","what":"Phylogentically independent contrasts (PIC)","title":"Evolution prac 4 — Macroevolutionary questions!","text":"Okay, now ’ve checked using regular linear regression, let’s use phylogenetic correction. use ape’s pic() function . Note: actually slight problem , Camarhynchus species sequences identical cytB. maybe true Geospiza magnirostris Geospiza conirostris. visible zero branch lengths phylogeny. must fix (drop taxa). Don’t worry much first bit code, ’ll basically add small branch length species make split, using ape::multi2di(). add little noise data, fine demonstration; also fix adding genetic data choosing different gene variation.  Okay, let’s now PIC! need run pic regression zero add “+0” model. reason direction rotation node (right left) completely arbitrary direction subtraction (pic values can - +; see pic_logRangeBH). pic regression go zero intercept term. (Running without term gives similar answer anyway.) Q3: come different conclusion, regards hypothesis, given pic analysis? ’s p-value model? can plot model well! Listen, ’ve given lot think . ’m pleased ’ve come far prac. follows also useful tool macroevolutionary analyses. strongly recommend paying attention kinds analyses might useful assignment!","code":"# Make a new tree to not save-over our \"real\" tree treeML_fixed <- treeML_dropped   # Add a small branch length (0.001) to those with an exactly zero length (0);   # Looks like some are almost zero (0.00000001); we also want to fix these! treeML_fixed$edge.length <- treeML_fixed$edge.length %>%    dplyr::if_else(. < 0.001, 0.001, .)   # Make these new branch lengths bifurcate (split) treeML_fixed <- treeML_fixed %>%   ape::multi2di(random = TRUE,tol = 0.001)    # Feel free to compare how the original and changed trees look! # Create a side-by-side layout par(mfrow = c(1, 2))   # Then make each plot! plot(treeML_dropped, main = \"Original plot\", sub = \"node numbers shown for illustration\",       col.sub = \"darkred\", cex = 0.5)   # We can also plot the node numbers that will relate to the pic values coming up! ape::nodelabels(treeML_dropped$node.label, bg = \"white\", frame = \"circle\", cex = 0.5) plot(treeML_fixed, main = \"New plot\", sub = \"now with tiny branches added\",       col.sub = \"darkred\", cex = 0.5) # Return R's plots to a single one!  par(mfrow = c(1, 1)) # Let's calculate PIC for log range BH and for median BH pic_logRangeBH <- ape::pic(finchSummary$log_rangeBH,                   treeML_fixed) pic_medianBH <- ape::pic(finchSummary$medianBH,                   treeML_fixed)    # We can use these PIC's to run a new linear regression!  picLM <- lm(pic_medianBH ~ pic_logRangeBH + 0)    # Let's test this new hypothesis summary(picLM) # Make the plot plot(pic_logRangeBH, pic_medianBH)   # Add in some dashed lines through zero on the horizontal and vertical abline(h = 0, lty = \"dotted\") abline(v = 0, lty = \"dotted\")   # Add in the model regression. abline(picLM, col = \"red\", lwd = 2)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"ancestral-state-reconstruction","dir":"Articles","previous_headings":"","what":"Ancestral state reconstruction","title":"Evolution prac 4 — Macroevolutionary questions!","text":"now use awesome package called phytools, written Liam Revell, also wrote Phylogenetic Comparitive Methods R. can install now.   can reconstruct probable state variable (continuous categorical) along phylogeny using ancestral state reconstructions. just !","code":"install.packages(\"phytools\",               repos = \"http://cran.us.r-project.org\") library(phytools)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"continuous-variable","dir":"Articles","previous_headings":"4 Ancestral state reconstruction","what":"Continuous variable","title":"Evolution prac 4 — Macroevolutionary questions!","text":"Hey, look ! species high beaks, mostly grouped one genus, Geospiza! ’s cool. Q4: tree, species biggest median beak height?","code":"# Get a vector with the median beak heights and the scientific names medianVector <- setNames(finchSummary$medianBH, finchSummary$scientificName)   # Use phytools to reconstruct ancestral states is the fastAnc function, which # estimates ancestral states using maximum likelihood ancMedian <- phytools::fastAnc(treeML_fixed, medianVector,                   vars = TRUE, CI = TRUE)  # We can plot this tree using phytools and then add in the estimated values # At the nodes to see how the birds have evolved in this trait   # Plot the tree using phytools phytools::plotTree(treeML_fixed, ftype = \"i\", fsize = 0.5, lwd = 1)   # Add in the nodes phytools::labelnodes(text = ancMedian$ace %>% round(0) %>% as.character(),                      node = names(ancMedian$ace) %>% as.numeric(),                      interactive = FALSE,                      shape = \"circle\",                      cex = 0.5) # We can also use phytools to map this evolution as a continuous trait along # our tree branchs! plotMap <- phytools::contMap(treeML_fixed, medianVector, plot = FALSE) %>%   phytools::setMap(c(\"white\", \"orange\", \"black\")) # Plot the tree plot(plotMap, leg.txt = \"Median beak height (mm)\", fsize = 0.7)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"categorical-variable","dir":"Articles","previous_headings":"4 Ancestral state reconstruction","what":"Categorical variable","title":"Evolution prac 4 — Macroevolutionary questions!","text":"don’t necessarily great categorical data dataset. However, make continuous variable categorical, let’s use beak height . can make histogram see natural breaks beak height (see ). Let’s split small (<10 mm) large beaks (>10 mm). Attention: Last year, many students just breezed never htought . asking , turning data categorical dataset? need James wants give easy example analyse categorical dataset? need continuous data, choose use continuous data, assignment? Think , ? fact ’s question 5 become… Q5: need transform continuous data categorical data assignment?  Now, let’s something cool calculate probability node large small using marginal ancestral state reconstruction. ’ll need another package — corHMM. Sorry, doesn’t logo :( ’re gonna hate , need turn categories numbers (0, 1, 2, 3, … etcetera)! can transformation text converting first factor number taking 1 away starts zero.  ’s pretty cool plot, think. shows probability node ancestral state large small. also shows state present day! can see , case, analysis struggled give us strong answers. , closer nodes consistent states, can see probabilities higher ancestor state. Maybe better states, better genetic data gave us longer branch lengths, can’t say sure! Q6: likely common ancestor Camarhynchus pallidus Geospiza scandens large small beak? Q7 coe change colour categories phylogeny? small byword: Running analyses almost statistical program involves transforming data different formats. Depending data analyses ’re load can bigger smaller. However, things single program single script really convenient. don’t expect remember understand data manipulations , trust , keep pracs code may well come handy future. got started R. ’m saying, save URL pracs (’ll try keep alive) better yet, save pages PDF!","code":"# See the histogram of species median beak height hist(finchSummary$medianBH, breaks = 20) # Make this into a categorical variable using an if-else statement finchSummary <- finchSummary %>%   dplyr::mutate(beakCat = dplyr::if_else(medianBH > 10,       # IF medianBH > 10:     \"Large\",        # ELSE medianBH < or = 10:     \"Small\"   ) %>% as.factor())  # Get a vector with the beak categories and the scientific names beakVector <- setNames(finchSummary$beakCat, finchSummary$scientificName)  # Just like we have done for our phylogenetic tree evolution models, we need to # choose a model of evolution (transition) for our categorical variable # In this case, it's a bit more of a pain and we need to build the models and then # test them ourselves   # Equal rates between each = ER ER_fit <- phytools::fitMk(treeML_fixed,                          beakVector,                         model = \"ER\")   # All rates different (ARD) means that all transition rates can be different ARD_fit <- phytools::fitMk(treeML_fixed,                          beakVector,                         model = \"ARD\")   # We could compare the fit of these models as below tibble::tibble(   model = c(\"ER\", \"ARD\"),   LogL = c(stats::logLik(ER_fit), stats::logLik(ARD_fit)),   aic = c(stats::AIC(ER_fit), stats::AIC(ARD_fit)) ) #> # A tibble: 2 × 3 #>   model  LogL   aic #>   <chr> <dbl> <dbl> #> 1 ER    -9.88  21.8 #> 2 ARD   -9.88  23.8  # HOWEVER, there are only two states and so not much to compare! If there were more # states then you'd choose those with the lowest AIC and biggest Log likelihood. # Install and load the package install.packages(\"corHMM\",               repos = \"http://cran.us.r-project.org\") library(corHMM) # Modify the finch data to be numbered categorical with only species name # and that numbered factor in a DATA FRAME format funchNumbered <- finchSummary %>% dplyr::select(scientificName, beakCat) %>%     dplyr::mutate(beakCatNumbered = beakCat %>%  as.numeric()-1) %>%     dplyr::select(!beakCat) %>% as.data.frame()  # Undertake the marginal reconstruction. This is a pretty complex bit of code. # Please do examine ?corHMM for help. cor_margRecon <- corHMM::corHMM(   treeML_fixed,   funchNumbered,   node.states = \"marginal\",     # Feed in our chosen model   model = \"ER\",      # The number of rate categories   rate.cat = 1,     # A rate matrix (for the number of trait factors) to optimise   rate.mat = matrix(c(NA,1,1,NA),2,2) ) #> You specified 'fixed.nodes=FALSE' but included a phy object with node labels. These node labels have been removed. #> Warning in corHMM::corHMM(treeML_fixed, funchNumbered, #> node.states = \"marginal\", : Branch lengths of 0 detected. #> Adding 1e-5 to these branches. #> State distribution in data: #> States:  1   2    #> Counts:  3   9    #> Beginning thorough optimization search -- performing 0 random restarts  #> Finished. Inferring ancestral states using marginal reconstruction.    # Have a look at the output cor_margRecon #>  #> Fit #>       -lnL      AIC     AICc Rate.cat ntax #>  -7.238929 16.47786 16.87786        1   12 #>  #> Legend #>   1   2  #> \"0\" \"1\"  #>  #> Rates #>        (1,R1) (2,R1) #> (1,R1)     NA    100 #> (2,R1)    100     NA #>  #> Arrived at a reliable solution  # Choose the colours to use once cols <- setNames(c(\"darkorange\", \"darkgreen\"),                  levels(finchSummary$beakCat))    # Let's plot the tree. phytools::plotTree.datamatrix(treeML_fixed,                               data.frame(beakVector),                               colors = list(cols), header = FALSE, fsize = 0.45) legend(\"bottomleft\", legend = levels(finchSummary$beakCat), pch = 22, pt.cex = 1.5,        pt.bg = cols, bty = \"n\", cex = 0.8) ape::nodelabels(pie = cor_margRecon$states, piecol = cols, cex = 0.5)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"your-homework","dir":"Articles","previous_headings":"","what":"Your homework","title":"Evolution prac 4 — Macroevolutionary questions!","text":"Attention: now end Week 4 (next week), want data mentioned Question 12; prac 2. need show demonstrator. re-phrased : Q12; prac 2: Show demonstrator… taxon ’s interesting ; number species group; appropriate number ALIGNED sequences (7 = 30 species/subspecies); gene region chosen? don’t data show now? Well, concerned . might frown give gentle admonishment. ’re lucky, ’ll help find data don’t expect us stay late haven’t reached help early. Attention: homework . next week, minimum, want trait data attempted align phylogenetic data plotted. along , better able help . Remember, long prac class many demonstrators. won’t able give undivided attention (’m sorry, ’d really like able !), please come prepared can don’t afraid ask help genuine problems. know assignment can challenging ’s whole prac time available seek help.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"whats-coming-next-week","dir":"Articles","previous_headings":"","what":"What’s coming next week?","title":"Evolution prac 4 — Macroevolutionary questions!","text":"Next week talking assignment providing help first component Grant Proposal assignment. Don’t forget make sure read understood need element assignment marking criteria. marks assigned just including correct elements — note means , wanted, even use data harvested pracs (’d prefer least asked different question). available help talk hypotheses analyses. great opportunity get support first component assignment head start following component. certain save R script week help assignment!","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"a-reminder-of-the-assignment-guidelines","dir":"Articles","previous_headings":"","what":"A reminder of the assignment guidelines","title":"Evolution prac 4 — Macroevolutionary questions!","text":"Please check Moodle -recent version","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"part-a-preliminary-phylogeny-10","dir":"Articles","previous_headings":"7 A reminder of the assignment guidelines","what":"Part (a) — preliminary phylogeny (10%)","title":"Evolution prac 4 — Macroevolutionary questions!","text":"idea component grant proposal assignment () demonstrate data phylogenetic abilities (ii) ensure preliminary results describe grant application. Build phylogeny using public data clade (group organisms) interest suggest 7 30 taxa used, however, might reasonable. tree tips species individuals within species, long original data tip. tree must outgroup (probably closely related genus; however, outgroup need trait data) Using trait data literature data extracted photos clade model trait along phylogeny (point) summarise trait changed traits come published paper directly, extracted photos species (e.g., something simple like beak colour measurements photos scales available species individuals) must, writing figures, explain trait(s) evolved across phylogeny. data allow , consider including statistical test. Provide references () genbank accession numbers sequences (similar), (ii) original research articles (similar) data retrieved derived, (iii) code — latter help demonstrators help code, (iv) used MEGA alignments /trees, must report least () number samples/species, (b) maximum length alignment, (c) alignment algorithm used, (d) tree model used, (e) number bootstraps/repetitions, (f) substitution model, (g) anything else unique important analysis. Table 1: description assignment component expected achieve particular score component (total possible mark sums five)","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"part-b-project-quality-and-innovation-10","dir":"Articles","previous_headings":"7 A reminder of the assignment guidelines","what":"Part (b) — Project quality and innovation (10%)","title":"Evolution prac 4 — Macroevolutionary questions!","text":"idea component grant proposal assignment () identify knowledge gap develop well-structured thought hypothesis, (ii) understand describe novelty question, (iii) describe methods appropriateness, (iv) explain importance project grant agency. keep mind scope grant must smaller one submit ARC another granting agency. means interested seeing quality reasoning writing. brief literature background project (one paragraph) Generally, good background start broader issue narrow specific one. won’t much space try succinct hit important points get reader need rather efficiently Identifying gap knowledge Identify knowledge gap filling — please note probably minor gap given scope assignment, ’s fine! Lay hypothesis, informed background knowledge/theory (research question!) Provide hypothesis help test address knowledge gap. Hypotheses, rather research questions, explicitly testable (.e. expected alternative outcome clear). example, “relationship B C”. , pracs “Finches larger beak heights larger beak height ranges finches smaller beak heights”. compared research question like “examine finch beak height impacts beak height range” Novelty/originality innovation proposed research (question asked ? project novel) Explain research hasn’t done ’s new (don’t expect exhaustive literature search, provide citations related research ). can hard show maybe can find novel angle ecological tint hypothesis. Appropriateness proposed research design (project answer hypothesis ’re wanting address) Given context included points 1 2 , explain answer hypothesis using phylogenetic methods. NOTE: referring back pilot phylogeny convincing! Potential create new knowledge research capacity (blue-sky), economic, commercial, environmental, social /cultural benefits Australia (societal benefits). potential project result new knowledge new research? discuss work lead new research (follow research), provide new important understandings, expand field bring speed better known taxa (e.g., birds well known, whereas reptiles invertebrates less well known), etc. (blue-sky component) project important? importance government, conservation, commercial applications (e.g., agricultural), cultural benefits Australia (societal benefits component). many ecological questions, conservation can safe option fall back Table 2: description assignment component expected achieve particular score component (total possible mark sums fifteen)","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac4.html","id":"new-packages-used-today","dir":"Articles","previous_headings":"","what":"New packages used today","title":"Evolution prac 4 — Macroevolutionary questions!","text":"corHMM :/","code":""},{"path":[]},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"working-directory","dir":"Articles","previous_headings":"1 Script preparation","what":"Working directory","title":"Evolution prac 5 — Tips and pitfalls","text":"example path ROOT directoy. NOTE: common pitfall seen people including file end path, : “/Users/jamesdorey/Desktop/Uni/Teaching/BIOL365_971/BIOL365_pracs_2025/EPrac5/Prac5_BIOL365.Rmd” See last part bold actually file file extension? ’s directory (folder).","code":"# Set the RootPath to Prac1 folder   # This is the example path to MY FOLDER.  RootPath <- \"/Users/jamesdorey/Desktop/Uni/Teaching/BIOL365_971/BIOL365_pracs_2025/EPrac5\"   # You can then set this as the project's working directory.  setwd(RootPath)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"install-packages","dir":"Articles","previous_headings":"1 Script preparation","what":"Install packages","title":"Evolution prac 5 — Tips and pitfalls","text":"PACKAGES used pracs","code":"CRAN_packageList <- c(     # Tidyverse packages:   \"dplyr\",   \"magrittr\", # This package is critical if R says that it can't find the function \"%>%\"   \"tibble\",            #  A lovely table format package   \"tidyr\",             # Another data maniupulation package from the tidyverse   \"stringr\",           #  to manipulate text strings   \"readxl\",  # Lets you read in excel files     # GENETICS packages on CRAN   \"rentrez\",   \"ape\",   \"msaR\",   \"phangorn\",   \"phytools\",   \"corHMM\",     # General R package to help with phytools   \"plotrix\",     # General R package to help with BeeBDC   \"taxadb\",     # This package gives you access to \"bioconductor\" packages   \"BiocManager\" )   # Install the packages that are hosted on CRAN install.packages(pkgs = c(CRAN_packageList),                rebuild = FALSE,               repos = \"http://cran.us.r-project.org\")    # These packages are installed from bioconductor BiocManager::install(\"Biostrings\") BiocManager::install(\"msa\")    # READ in your packages lapply(c(CRAN_packageList, \"dplyr\", \"magrittr\", \"ape\", \"rentrez\"),         library, character.only = TRUE)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"load-packages","dir":"Articles","previous_headings":"1 Script preparation","what":"Load packages","title":"Evolution prac 5 — Tips and pitfalls","text":", need load packages R.","code":"lapply(c(CRAN_packageList, \"Biostrings\", \"msa\"),         library, character.only = TRUE)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"last-weeks-homework","dir":"Articles","previous_headings":"","what":"Last week’s homework","title":"Evolution prac 5 — Tips and pitfalls","text":"Attention: Last week wanted , minimum, trait data attempted align phylogenetic data plotted. Hopefully ’re point. long trait data, satisfied won’t try attempt summon demons upon code. along , better able help . Remember, long prac class many demonstrators. won’t able give undivided attention (’m sorry, ’d really like able !), please come prepared can don’t afraid ask help genuine problems. know assignment can challenging ’s whole prac time available seek help.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"do-my-genetic-data-relate-to-my-trait","dir":"Articles","previous_headings":"","what":"Do my genetic data relate to my trait?","title":"Evolution prac 5 — Tips and pitfalls","text":"’ve driven home times already, look last two prac intros example, … linking traits directly genetic variants/mutations. possible extremely complicated usually done genome-wide association studies. Bugger , say. Instead, : Build tree using genetic data Using tree statistical methods infer trait(s) changed evolution","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"what-if-i-want-to-do-a-more-complicated-analysis","dir":"Articles","previous_headings":"","what":"What if I want to do a more complicated analysis?","title":"Evolution prac 5 — Tips and pitfalls","text":"Sure, maybe haven’t shown tests didn’t want freak . Usually, want standard statistical test can phylogenetically explicit manner well. , consider data (continuous, categorical, count…), think (just google) statistical test need look function (probably phytools package). examples : ANOVA (continuous categorical) — phytools::phylANOVA() Chi-squared (count data — two binary traits) — phytools::fitPagel() link useful workshop using phytools — http://www.phytools.org/Cordoba2017/ — Maybe ’ll find something cool . example, Exercise 15 really cool plotting ideas.","code":""},{"path":[]},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"troubleshooting","dir":"Articles","previous_headings":"5 Common general issues","what":"Troubleshooting","title":"Evolution prac 5 — Tips and pitfalls","text":"Many issues figure . powerful technique consider select run R object individually work way back code find problem. example, maybe made object lines , accidentally removed spaces species names alignment realise! Oops. try make tree outgroup might find says outgroup tree! looked objects got point, probably realise go find problem!","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"could-not-find-function","dir":"Articles","previous_headings":"5 Common general issues","what":"could not find function “%>%”","title":"Evolution prac 5 — Tips and pitfalls","text":"common error get regularly. ’s also INCREDIBLY simple fix! problem pipe function, %>%, exported magrittr package! , get “find function”%>%“” error, need run well !","code":"library(magrittr)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"error-in-loadnamespacex-there-is-no-package-called-package-name","dir":"Articles","previous_headings":"5 Common general issues","what":"Error in loadNamespace(x) : there is no package called ‘PACKAGE NAME’","title":"Evolution prac 5 — Tips and pitfalls","text":"Another common issue people came across involves R able find particular package. example, taxa name query code , people often confronted error: R tried tell EXACTLY problem , taxadb package installed! need install well . context, reason happens BeeBDC, function BeeBDC::taxadbToBeeBDC() considered core package users want. save EVERYONE download taxadb, let users choose download need .","code":"Loading required namespace: taxadb Failed with error:  ‘there is no package called ‘taxadb’’  - Downloading taxonomy... Error in loadNamespace(x) : there is no package called ‘taxadb’ # A useful package for taxonomic and occurrence data install.packages(\"BeeBDC\")   # ALSO install taxadb install.packages(\"taxadb\")    # Run the BeeBDC query speciesCountTable <- BeeBDC::taxadbToBeeBDC(name = \"Apidae\",                                rank = \"Family\",                                provider = \"gbif\") %>%   dplyr::filter(taxonomic_status == \"accepted\") %>%   dplyr::group_by(genus) %>%   dplyr::count()"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"trouble-with-installing-packages","dir":"Articles","previous_headings":"5 Common general issues","what":"Trouble with installing packages","title":"Evolution prac 5 — Tips and pitfalls","text":"Sometimes trouble installing R packages loading . drag! Often easiest option just restart R! quick easy “Session” drop R studio. See Figure 1 . advanced option actually set new folder save packages . actually really easy can useful want different places save packages specific research projects. can :","code":"# Install renv = \"R environment\" install.packages(\"renv\")   # Initialise a project in your RooPath. Hey, nice. renv::init(RootPath)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"read-genbank-error","dir":"Articles","previous_headings":"5 Common general issues","what":"read.GenBank error","title":"Evolution prac 5 — Tips and pitfalls","text":"anusual one don’t 100% understand. , guess potentially GenBank bloacking download requests R maybe 376 accession numbers (sequences). Let help cheat system breaking request. case : entrez search many sequences Turn search results tibble, break groups, list group [dplyr::]pull column accession IDs (NOTE: ’m just highlighting dplyr lets read code like sentence!!) Feed list IDs ape’s function, read.GenBank Combine returned read.GenBank result one DNAbin object! Now, reasonably extensive chunk code. , see experience data management overcome major issue done something ’s REALLY difficult lines code now can now ! project subsequent ones. Coding powerful.","code":"myCheekySearch <- rentrez::entrez_search(db = \"nucleotide\",               term = \"(cytb[Gene Name]) AND (Apis[Organism])\",                 # With this new search term, I can see 171 sequences, which is enough for me to                 # download, I think! So, I'll set this in retmax               retmax = 500)  # Inspect the object and answer the question below myCheekySearch  # What we actually need are the accession numbers form the myCheekySearch object. Let's turn this   # vector into a list of vectors, each 200 long. I'm going to write it in the tidyverse because   # it's easy for me, but it might not be the most concise way to do this. myCheekySearch_list <- myCheekySearch$ids %>%    dplyr::tibble(accessionIDs = .) %>%   # Group by the row number and step size (200 IDs at once)   dplyr::group_by(group = ceiling(dplyr::row_number()/200)) %>%   # Split the dataset up into a list by group   dplyr::group_split(.keep = TRUE)      # You can check out any element of the list... let's look at the 2nd myCheekySearch_list[[2]]    # Now we can apply the function across a list using lapply GenBank_list <- myCheekySearch_list %>%     # FIrst, let's pass our list into lapply to extract (pull out) on the accessionIDs   lapply(       # Remember, when you use the pipe, %>%, you can call the data being passed in with \".\"     X = .,     FUN = dplyr::pull,     accessionIDs) %>%   lapply(     # The data to feed into the function   X = .,   FUN = read.GenBank)  # This is called a \"for loop\" It is an EXTREMELY useful tool where you cant count from 1 to  # i iterations (in our case 1 to (i-1)). Don't worry too much about understanding it, but they   # are extremely useful tools and can be quit equick to build for simple problems like below for(i in 1:(length(GenBank_list)-1)){   if(i == 1){     GenBank_loop <- append(GenBank_list[[i]], GenBank_list[[i+1]])       # Make the attribute list for the first pair of DNAbin objects     attributesList <- list(       names = c(attributes(GenBank_list[[i]])$names, attributes(GenBank_list[[i+1]])$names),       class = attributes(GenBank_list[[i]])$class,       description = c(attributes(GenBank_list[[i]])$description,                       attributes(GenBank_list[[i+1]])$description),        species = c(attributes(GenBank_list[[i]])$species,                   attributes(GenBank_list[[i+1]])$species)       )   }else{     GenBank_loop <- append(GenBank_loop, GenBank_list[[i+1]])             # Make the attribute list for the first pair of DNAbin objects     attributesList <- list(       names = c(attributesList$names, attributes(GenBank_list[[i+1]])$names),       class = attributesList$class,       description = c(attributesList$description,                       attributes(GenBank_list[[i+1]])$description),        species = c(attributesList$species,                   attributes(GenBank_list[[i+1]])$species)       )     } }   # We can then call this object whatever we want in R  combinedGenBank <- GenBank_loop    # let's now add the attributes to this new object attributes(combinedGenBank) <- attributesList  # This can be downloaded from GitHub as a function using the below code, if the code in Prac 3 fails due to permissions. # First of all, you will need to read in a function that is hosted on my GitHub utils::download.file(url = \"https://raw.githubusercontent.com/jbdorey/EvolutionPracs/main/R/DoreyGenbank.R\",                      destfile = \"DoreyGenbank.R\",                      method=\"curl\")   # and then read in the function source(\"DoreyGenbank.R\")"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"common-alignmenttree-issues","dir":"Articles","previous_headings":"","what":"Common alignment/tree issues","title":"Evolution prac 5 — Tips and pitfalls","text":"Look, issues going hard address without help along, let try…","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"incorrect-number-of-tips","dir":"Articles","previous_headings":"6 Common alignment/tree issues","what":"Incorrect number of tips","title":"Evolution prac 5 — Tips and pitfalls","text":"common issue, especially applying code taxa trees alignments might say don’t enough tips, maybe NULL, maybe issue. need check alginment see names expect! Check: names, missing names something gone wrong! Keep running R objects feed find things change EXPECTED!! E.g., Quite often, problem actually came reading fasta file ! See next point","code":"names(DarwinFinches_cytB) theChosenSeqs names(DarwinFinches_cytB) theChosenSeqs genBankSummaryTibble attributes(DarwinFinches_cytB)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"cant-see-the-msar-alignment-box","dir":"Articles","previous_headings":"6 Common alignment/tree issues","what":"Can’t see the msaR alignment box","title":"Evolution prac 5 — Tips and pitfalls","text":"weird issue PC laptops. ’m sorry say don’t know don’t use PC find . , find work-around worked people. Figure 2 , can select “Export” “Viewer” tab bottom right hand side RStudio save Web Page. can opened internet browser (hopefully). REMEMBER: interactive plot scroll across see alignment!","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"reading-in-a-fasta-from-a--fasta-file-vs-from-read-genbank","dir":"Articles","previous_headings":"6 Common alignment/tree issues","what":"Reading in a fasta from a .fasta file vs from read.GenBank","title":"Evolution prac 5 — Tips and pitfalls","text":"important one one many people troubles. Let try make clear. read data using ape::read.GenBank() R automatically download bunch really useful attributes data! can extract data attributes(youGenBank_data) turn genBankSummaryTibble Go look Prac 3 manual. name sequence sequence Quite often name sequence accession ID, species name, bunch info including gene name . One easy way get around problem make copy file include species names , remove rest name part. actually data management nicer tree shorter names! Also, see point read.GenBank error alternative way read GenBank; problem! may told just go grab sequences GenBank directly using accession numbers `ape::read.GenBank()``.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"problem-with-dnabin-object-or-type-of-dna-object","dir":"Articles","previous_headings":"6 Common alignment/tree issues","what":"Problem with DNAbin object or type of DNA object","title":"Evolution prac 5 — Tips and pitfalls","text":"people issues feeding DNAbin objects DNA object types functions. Remember, asked look class(ofYourObjects). Different functions written handle certain types data written code — expect certain type data come code. types might fine, might require chance code deal ! common issues included: Using ChatGPT help code. code (WRITING), discourage using ChatGPT, let’s clear one thing. ChatGPT can bit idiot. know context rest code provide code reflects . example, might ask read fasta using Biostrings package. might fine rest code designed XStringSet objects mind. Similar may realise sometimes read fasta objects different ways! example, can read exact fasta file two different packages get different objects, first DNAbin object second coming text string need manipulate use. different things different parts prac, take time look usually feed section. Reads DNAbin object: Reads text string: also saved read fasta file .rds data using readRDS() saveRDS(). instead saving fasta file? Becuase, save DNAbin object way can keep associated attributes ! Remember, fasta files keep >name sequence.","code":"Biostrings::readDNAStringSet() alignedDNAbin <- ape::read.FASTA(\"alignedDNAbin.fasta\") finchSpecies_fasta <- msaR::as.fasta(finchSpecies)"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"random-tree-error","dir":"Articles","previous_headings":"6 Common alignment/tree issues","what":"Random tree error","title":"Evolution prac 5 — Tips and pitfalls","text":"also point people trouble building trees run preceding code. … go ahead make sure ’ve run everything","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"msamsa-going-really-slow","dir":"Articles","previous_headings":"6 Common alignment/tree issues","what":"msa::msa going really slow","title":"Evolution prac 5 — Tips and pitfalls","text":"Look guys, ’ll start saying R can amazing things complex datasets sometimes just need patient thinks. said, many people reading whole mitogenomes (16-18,000 basepairs data per sequence). Remember, talked Prac 2. ’m going stop aligning building tree mitogenomes , depending computer, take lot longer. think want just get one gene build tree.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"cannot-find-the-function-getymult","dir":"Articles","previous_headings":"6 Common alignment/tree issues","what":"Cannot find the function “getYmult()”","title":"Evolution prac 5 — Tips and pitfalls","text":"hoping case phytools give helpful error package needed install function. . Regardless, simple google “getYmult()” return comes R package plotrix suggested (COMPULSARY) dependency phytools. Simply install plotrix.","code":"install.packages(\"plotrix\")"},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"data-issues","dir":"Articles","previous_headings":"","what":"Data issues","title":"Evolution prac 5 — Tips and pitfalls","text":"many data issues yet. Remember, actually taught given code lot data management! , may also use Excel similar ’d prefer — look marking guidelines ’ll see ’m marking programs use per se. Just certain can meet criteria get full marks (’m happy give full marks)!","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/articles/PhyloPrac5.html","id":"objects-are-different-length","dir":"Articles","previous_headings":"7 Data issues","what":"Objects are different length","title":"Evolution prac 5 — Tips and pitfalls","text":"common issues can’t combine two objects R one longer/shorter . Probably, mixed code, missed step similar. case need track back problem running object led point find number make sense! Maybe, example, read fasta file without attributes outgroup name ingroup species names! Let give illustrative example . ’ll get something like error. need find problem change sizes match! Alternatively, can look used dplyr::left_join() Prac 4; depends ’re trying error.","code":"# Let's say that we make two simple data frames  FirstDataFrame <- dplyr::tibble(column1 = c(1, 2, 3, 4, 5, 6)) SecondDataFrame <- dplyr::tibble(column1 = c(\"a\", \"b\", \"c\", \"d\", \"e\"))  # Can you already see the problem with joining these datasets? Let's have a look...   # how long is each dataset? nrow(FirstDataFrame) ## [1] 6 nrow(SecondDataFrame) ## [1] 5 # They are different lengths! So, what happens when we do a very simple merge? failedMerge <- dplyr::bind_cols(FirstDataFrame, SecondDataFrame) Error in `dplyr::bind_cols()`: ! Can't recycle `..1` (size 6) to match `..2` (size 5). Backtrace:  1. dplyr::bind_cols(FirstDataFrame, SecondDataFrame)"},{"path":"https://jbdorey.github.io/EvolutionPracs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James B. Dorey. Author, maintainer, copyright holder.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dorey J (2025). EvolPracs: Evolution practicals. R package version 1.0, https://jbdorey.github.io/EvolutionPracs/.","code":"@Manual{,   title = {EvolPracs: Evolution practicals},   author = {James B. Dorey},   year = {2025},   note = {R package version 1.0},   url = {https://jbdorey.github.io/EvolutionPracs/}, }"},{"path":"https://jbdorey.github.io/EvolutionPracs/index.html","id":"biol365--marine-and-terrestrial-ecology","dir":"","previous_headings":"","what":"Evolution practicals","title":"Evolution practicals","text":"Dr James B Dorey, University Wollongong","code":""},{"path":[]},{"path":[]},{"path":"https://jbdorey.github.io/EvolutionPracs/index.html","id":"overview","dir":"","previous_headings":"University of Wollongong","what":"Overview","title":"Evolution practicals","text":"simple GitHub page host activities BIOL365 cohort. includes Weeks one five practicals associated files.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/index.html","id":"directory","dir":"","previous_headings":"","what":"Directory","title":"Evolution practicals","text":"Evolution Prac 1 — Getting ready! Evolution Prac 2 — Access genetic data GenBank Evolution Prac 3 — Aligning genetic data building phylogenies R Evolution prac 4 — Macroevolutionary questions! Evolution prac 5 — Tips pitfalls","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Evolution practicals","text":"Contributors names contact info Dr James Dorey, jdorey@uow.edu.au, @jamesbeedorey.bsky.social","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/index.html","id":"version-history","dir":"","previous_headings":"","what":"Version History","title":"Evolution practicals","text":"Initial Release fixes","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/reference/DoreyGenbank.html","id":null,"dir":"Reference","previous_headings":"","what":"Download larger amounts of genbank data into R — DoreyGenbank","title":"Download larger amounts of genbank data into R — DoreyGenbank","text":"function works rentrez::entrez_search() ape::read.GenBank() together download data Genbank. However, overcomes issues download limits iteratively downloading data adding sequences associated metadata together.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/reference/DoreyGenbank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download larger amounts of genbank data into R — DoreyGenbank","text":"","code":"DoreyGenbank(   db = \"nucleotide\",   term = \"(cytb[Gene Name]) AND (Apis[Organism])\",   retmax = 500,   config = NULL,   retmode = \"xml\",   use_history = FALSE,   seq.names = NULL,   species.names = TRUE,   as.character = FALSE,   chunk.size = 400,   quiet = TRUE,   type = \"DNA\" )"},{"path":"https://jbdorey.github.io/EvolutionPracs/reference/DoreyGenbank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download larger amounts of genbank data into R — DoreyGenbank","text":"db character, name database search . term character, search term. syntax used making searches described Details help message, package vignette reference given . retmax numeric. maximum number sequences return download single search. config vector configuration options passed httr::GET retmode character, one json (default) xml. make difference cases. use_history logical. TRUE return web_history object use later calls NCBI seq.names names give sequence; default accession numbers used. CURRENTLY USE species.names logical indicating whether attribute species names returned object. .character logical controlling whether return sequences object class \"DNAbin\" (default). chunk.size number sequences downloaded together (see details). quiet logical value indicating whether show progress downloads. TRUE, also print (full) name FASTA file containing downloaded sequences. type character specifying download \"DNA\" (nucleotide) \"AA\" (amino acid) sequences.","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/reference/DoreyGenbank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download larger amounts of genbank data into R — DoreyGenbank","text":"list DNA sequences made vectors class \"DNAbin\", single characters (.character = TRUE) two attributes (species description).","code":""},{"path":"https://jbdorey.github.io/EvolutionPracs/reference/DoreyGenbank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download larger amounts of genbank data into R — DoreyGenbank","text":"","code":"TEST <- DoreyGenbank(db = \"nucleotide\", term = \"(cytb[Gene Name]) AND (Apis[Organism])\", retmax = 500)"}]
